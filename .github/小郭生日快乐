local WindUI = loadstring(game:HttpGet("https://github.com/wsomoqaz/CX/releases/latest/download/main.lua"))()

local Window = WindUI:CreateWindow({
    Title = "小郭生日快乐",
    Icon = "https://raw.githubusercontent.com/wsomoQaz/rOblox/main/1756386771849.png",
    Author = "通用",
    Folder = "MyTestHub",
})

local Tab = Window:Tab({
    Title = "玩家",
    Icon = "https://raw.githubusercontent.com/wsomoQaz/rOblox/main/1756386771849.png",
    Locked = false,
})

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local SpeedInput = Tab:Input({
    Title = "移动速度设置",
    Desc = "输入数字修改玩家速度",
    Value = "",
    InputIcon = "zap", -- 图标可以改，比如 zap（闪电）
    Type = "Input",
    Placeholder = "请输入速度数值...",
    Callback = function(text)
        local speed = tonumber(text) -- 转换为数字
        if speed then
            LocalPlayer.Character.Humanoid.WalkSpeed = speed
            print("已将移动速度修改为: " .. speed)
        else
            print("请输入正确的数字！")
        end
    end
})

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local JumpInput = Tab:Input({
    Title = "跳跃高度设置",
    Desc = "输入数字修改玩家跳跃高度",
    Value = "",
    InputIcon = "arrow-up-from-line", -- 图标（往上跳的样式）
    Type = "Input",
    Placeholder = "请输入跳跃高度数值...",
    Callback = function(text)
        local jump = tonumber(text) -- 转换为数字
        if jump then
            local humanoid = LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.UseJumpPower = true -- 确保启用 JumpPower 模式
                humanoid.JumpPower = jump
                print("已将玩家跳跃高度修改为: " .. jump)
            else
                print("未找到Humanoid，可能角色还没加载")
            end
        else
            print("请输入正确的数字！")
        end
    end
})

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Workspace = game:GetService("Workspace")

local GravityInput = Tab:Input({
    Title = "重力设置",
    Desc = "输入数字修改全局重力 (默认196.2)",
    Value = "",
    InputIcon = "circle-dot", -- 图标随意，这里用圆点
    Type = "Input",
    Placeholder = "请输入重力数值...",
    Callback = function(text)
        local gravity = tonumber(text) -- 转换为数字
        if gravity then
            Workspace.Gravity = gravity
            print("已将重力修改为: " .. gravity)
        else
            print("请输入正确的数字！")
        end
    end
})

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local HeadInput = Tab:Input({
    Title = "头部大小设置",
    Desc = "输入数值修改其他玩家的头部大小 (R6 / R15 自动适配)",
    Value = "",
    InputIcon = "circle",
    Type = "Input",
    Placeholder = "请输入数值...",
    Callback = function(text)
        local num = tonumber(text)
        if num then
            for _, player in ipairs(Players:GetPlayers()) do
                if player ~= LocalPlayer and player.Character then
                    local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
                    if humanoid and humanoid.RigType == Enum.HumanoidRigType.R15 then
                        -- R15 修改 HeadScale
                        ModifyR15Head(player, num)
                    else
                        -- R6 直接改 Head 大小
                        ModifyR6Head(player, num)
                    end
                end
            end
        else
            print("请输入正确的数字！")
        end
    end
})

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

local InfiniteJumpEnabled = false

-- 开关：无限跳跃
local InfiniteJumpToggle = Tab:Toggle({
    Title = "无限跳跃",
    Desc = "开启后可在空中连续跳跃",
    Icon = "arrow-up-from-line",
    Default = false,
    Callback = function(state)
        InfiniteJumpEnabled = state
        if state then
            print("无限跳跃已开启")
        else
            print("无限跳跃已关闭")
        end
    end
})

-- 监听玩家输入跳跃
UserInputService.JumpRequest:Connect(function()
    if InfiniteJumpEnabled and LocalPlayer.Character then
        local humanoid = LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end
end)


local Lighting = game:GetService("Lighting")

-- 提前准备夜视效果
local NightVision = Instance.new("ColorCorrectionEffect")
NightVision.Name = "NightVisionEffect"
NightVision.Brightness = 0.2
NightVision.Contrast = 0.3
NightVision.Saturation = 1
NightVision.TintColor = Color3.fromRGB(150, 255, 150) -- 绿色滤镜
NightVision.Enabled = false
NightVision.Parent = Lighting

-- 开关：夜视
local NightVisionToggle = Tab:Toggle({
    Title = "夜视模式",
    Desc = "开启后在黑暗中看得更清楚",
    Icon = "moon",
    Default = false,
    Callback = function(state)
        NightVision.Enabled = state
        if state then
            print("夜视已开启")
        else
            print("夜视已关闭")
        end
    end
})


local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

-- 飞行相关变量
local Flying = false
local FlySpeed = 50 -- 默认飞行速度
local FlyConnection

-- 输入框：设置飞行速度
local FlySpeedInput = Tab:Input({
    Title = "飞行速度设置",
    Desc = "输入数值调整飞行速度",
    Value = "50",
    InputIcon = "wind",
    Type = "Input",
    Placeholder = "请输入速度...",
    Callback = function(text)
        local speed = tonumber(text)
        if speed then
            FlySpeed = speed
            print("飞行速度已设置为: " .. FlySpeed)
        else
            print("请输入正确的数值！")
        end
    end
})

-- 开关：飞行模式
local FlyToggle = Tab:Toggle({
    Title = "飞行模式",
    Desc = "开启后可以在空中自由移动",
    Icon = "plane",
    Default = false,
    Callback = function(state)
        Flying = state
        local character = LocalPlayer.Character
        if not character then return end
        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
        if not humanoidRootPart then return end

        if Flying then
            print("飞行模式已开启 (速度 " .. FlySpeed .. ")")
            -- 开始飞行：绑定更新
            FlyConnection = RunService.RenderStepped:Connect(function()
                local moveDirection = Vector3.zero
                if UserInputService:IsKeyDown(Enum.KeyCode.W) then
                    moveDirection = moveDirection + (workspace.CurrentCamera.CFrame.LookVector)
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.S) then
                    moveDirection = moveDirection - (workspace.CurrentCamera.CFrame.LookVector)
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.A) then
                    moveDirection = moveDirection - (workspace.CurrentCamera.CFrame.RightVector)
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.D) then
                    moveDirection = moveDirection + (workspace.CurrentCamera.CFrame.RightVector)
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
                    moveDirection = moveDirection + Vector3.new(0,1,0)
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
                    moveDirection = moveDirection - Vector3.new(0,1,0)
                end

                if moveDirection.Magnitude > 0 then
                    humanoidRootPart.Velocity = moveDirection.Unit * FlySpeed
                else
                    humanoidRootPart.Velocity = Vector3.new(0,0,0)
                end
            end)
        else
            print("飞行模式已关闭")
            if FlyConnection then
                FlyConnection:Disconnect()
                FlyConnection = nil
            end
            -- 关闭飞行时清除速度
            humanoidRootPart.Velocity = Vector3.new(0,0,0)
        end
    end
})